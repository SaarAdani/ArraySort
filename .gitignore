package com.saar;

public class Main {
    public static int[] arr = {-9, 10, 12, 8, -9, 7, 30, -12, 4};
    public static int[] arr1 = {3, 2, 4, 4, 5, 6};
    public static int[] arr2 = {3, 2, 4, 1, 5, 6};
    public static int[] arr3 = {1, 4, 3, 2, 5, 6};
    public static int[] arr4 = {1, 2, 4, 3, 6, 5};
    public static int[] arr5 = {1, 2, 4, 4, 6, 5};
    public static int[] arr6 = {7, 6, 6, 6, 6, 5};

    public static void main(String[] args) {
        //System.out.println(checkMaxSumInArray());
        System.out.println(checkIfOneSwitchSorted(arr1));
        System.out.println(checkIfOneSwitchSorted(arr2));
        System.out.println(checkIfOneSwitchSorted(arr3));
        System.out.println(checkIfOneSwitchSorted(arr4));
        System.out.println(checkIfOneSwitchSorted(arr5));
        System.out.println(checkIfOneSwitchSorted(arr6));
    }

    public static int checkMaxSumInArray() {

        int maxSum = 0;
        int currentsum = 0;
        for (int i = 0; i < arr.length; i++) {
            currentsum += arr[i];

            if (maxSum < currentsum) {
                maxSum = currentsum;
            } else if (currentsum < 0) {
                currentsum = 0;
            }
        }
        return maxSum;
    }

    public static boolean checkIfOneSwitchSorted(int[] x) {

        int counter = 0;
        for (int i = 2; i < x.length - 1; i++) {
            if (x[i - 1] > x[i]) {
                counter++;
            }
        }
        if (x[0] > x[1]) {
            counter += 2;
        }
        else if (x[x.length - 2] > x[x.length - 1]) {
            counter += 2;
        }
        if (counter <= 2) {
            return true;
        }
        return false;}

}
